[project]
name = "anubis"
version = "2.0.0"
dynamic = ["dependencies", "optional-dependencies"]

[project.urls]
repository = "https://github.com/letsbuilda/anubis"
documentation = "https://docs.letsbuilda.dev/anubis/"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic.dependencies]
file = ["requirements/requirements.txt"]

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = ["requirements/requirements-dev.txt"] }
tests = { file = ["requirements/requirements-tests.txt"] }
docs = { file = ["requirements/requirements-docs.txt"] }

[tool.ruff]
preview = true
unsafe-fixes = true
target-version = "py312"
line-length = 120

[tool.ruff.lint]
select = [
  "ALL",
]
ignore = [
  "CPY001", # (Missing copyright notice at top of file)
  "ERA001", # (Found commented-out code) - Porting features a piece at a time
  "G004", # (Logging statement uses f-string) - Developer UX
  "S311", # (Standard pseudo-random generators are not suitable for cryptographic purposes) - all false positives
  "PERF203", # (`try`-`except` within a loop incurs performance overhead) - try/except/else is ugly
  "PLR0913", # (Too many arguments to function call) - eh...
  "C901", # (`` is too complex) - uh...
  "DTZ007", # (The use of `datetime.datetime.strptime()` without %z must be followed by `.replace(tzinfo=)` or `.astimezone()`) - eh...
  "SLF001", # (Private member accessed) - I don't have a better solution
  "PLR2004", # (Magic value used in comparison, consider replacing `` with a constant variable) - Be responsible
]

[tool.ruff.lint.extend-per-file-ignores]
"docs/*" = [
    "INP001", # (File `tests/*.py` is part of an implicit namespace package. Add an `__init__.py`.) - Docs are not modules
]
"tests/*" = [
    "INP001", # (File `tests/*.py` is part of an implicit namespace package. Add an `__init__.py`.) - Tests are not modules
    "S101", # (Use of `assert` detected) - Yes, that's the point
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
